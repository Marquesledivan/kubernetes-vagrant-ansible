- name: Reset Cluster
  command: >
    kubeadm reset --force
  register: kubeadmin_init

- name: Initialize Kubernetes master with kubeadm init.
  command: >
    kubeadm init --pod-network-cidr=172.16.0.0/16 --apiserver-advertise-address {{ IP_MASTER }}
  register: kubeadmin_init

- name: Ensure .kube directory exists.
  file:
    path: ~/.kube
    state: directory

- name: Symlink the kubectl admin.conf to ~/.kube/conf.
  file:
    src: /etc/kubernetes/admin.conf
    dest: ~/.kube/config
    state: link

- name: Configure CNI networking.
  shell: kubectl apply -f {{ default_kubernetes_cni_manifestUrl }}
  register: weavenet_result

- name: "Cluster token"
  shell: kubeadm token list | cut -d ' ' -f1 | sed -n '2p'
  register: K8S_TOKEN

- name: "CA Hash"
  shell: openssl x509 -pubkey -in /etc/kubernetes/pki/ca.crt | openssl rsa -pubin -outform der 2>/dev/null | openssl dgst -sha256 -hex | sed 's/^.* //'
  register: K8S_MASTER_CA_HASH

- name: "Add K8S Token and Hash to dummy host"
  add_host:
    name:   "K8S_TOKEN_HOLDER"
    token:  "{{ K8S_TOKEN.stdout }}"
    hash:   "{{ K8S_MASTER_CA_HASH.stdout }}"

- name:
  debug:
    msg: "[Master] K8S_TOKEN_HOLDER K8S token is {{ hostvars['K8S_TOKEN_HOLDER']['token'] }}"

- name:
  debug:
    msg: "[Master] K8S_TOKEN_HOLDER K8S Hash is  {{ hostvars['K8S_TOKEN_HOLDER']['hash'] }}"

- name: "Generate join command"
  shell: >
    echo '#!/bin/bash' > {{ PATH_NGINX }} | kubeadm token create --print-join-command >> {{ PATH_NGINX }}

# - name: Generate join command
#   command: kubeadm token create --print-join-command
#   register: join_command

# - name: Copy join command to local file
#   become: false
#   local_action: copy content="{{ join_command.stdout_lines[0] }}" dest="./join-command"